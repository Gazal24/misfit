= form_for(@report, :action => url(:show_report, :report_type => "#{@report.class}"), :method => :get) do
  %table
    %tr
      %td
        Projected cash flow for
      %td
        =date_select_for(@report, "from_date", :date => @report.from_date)
      %td
        =date_select_for(@report, "to_date", :date => @report.to_date)
    %tr
      %td
        - branch_id = (params[:projected_report] and params[:projected_report][:branch_id]) ? params[:projected_report][:branch_id] : nil
        - center_id = (params[:projected_report] and params[:projected_report][:center_id]) ? params[:projected_report][:center_id] : nil
        Branch: 
        =select(:branch_id , :collection => Branch.all, :value_method => :id, :text_method => :name, :include_blank => true, :selected => branch_id)
      %td
        Center: 
        - centers = (branch_id and not branch_id.blank?) ? Center.all(:branch_id => branch_id, :order => [:name]) : Center.all(:order => [:name])
        =select(:center_id , :collection => centers.all.map{|x| [x.id, "#{x.branch.name} -- #{x.name}"]}, :include_blank => true, :selected => center_id)
      %td
        =submit "Go"

%table.report
  %tr.header
    %th
      Group
    %th{:colspan => "1"}
      Amount
    %th{:colspan => "3"}
      Payment scheduled
    %th{:colspan => "3"}
      Balance outstanding
  %tr.header
    %th
    %th
      Applied
    %th
      Principal
    %th
      Interest
    %th
      Total
    %th
      Principal
    %th
      Interest
    %th
      Total
  - center_id, branch_id = nil, nil
  - length = 7
  -@groups.each do |group_id, centers|
    -if centers.keys.length>0
      -branch_total = []
      %tr.branch
        %td{:colspan => length+1}
          %b
            =@branches[group_id].name
      -centers.sort_by{|center_id, groups| @centers[center_id].name}.each do |center_id, groups|
        -if groups.keys.length>0
          %tr.center
            %td{:colspan => length+1}
              %b
                =@centers[center_id].name
          - center_total = Array.new(length, 0)
          -groups.sort_by{|group_id, group| group[-1]}.each do |group_id, group|
            %tr.group
              %td
                =group[-1]
              -group[0..-2].each_with_index do |g, idx|
                %td
                  =g
                  -center_total[idx]+=g
          %tr.center_total
            %td
              %b==Center total:
              -branch_total.push(center_total)
            -center_total.each do |ele|
              %td
                %b
                  =ele
      %tr.branch_total
        %td
          %b==Branch total:
        -branch_total.transpose.collect{|arr| arr.reduce{|s, x| s+=x}}.each do |ele|
          %td
            %b
              =ele

