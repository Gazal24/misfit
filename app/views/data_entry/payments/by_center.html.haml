- if @center and @date
  - @md = @center.meeting_day?(@date)
  %h1
    = link_to "Center #{@center.name}", resource(@center.branch, @center)
    = @date 
    - if @center
      (
      = Center.meeting_days[@date.wday]
      )

  - if not @errors.blank?
    .error
      - @errors.each do |error|
        == Loan <b>#{error.resource.class == Payment ? error.resource.loan.id : error.resource.id} :</b>
        = error.values.join("*")
        %br

  %a{ :name => 'weeksheet' }
  %table.narrow.form{ :style => "width: 100%;" }
    %tr.odd
      %td meeting at
      %td
        - if @md
          %b== #{@date} #{@center.meeting_time}
        - else
          %i no meeting today
      %td
        = link_to 'today', url(:enter_payments, :action => 'by_center', :for_date => Date.today, :center_id => @center.id) + '#weeksheet'
        &nbsp;|&nbsp;
        = link_to 'previous meeting', url(:enter_payments, :action => 'by_center', :for_date => @center.previous_meeting_date_from(@date), :center_id => @center.id) + '#weeksheet'
        &nbsp;|&nbsp;
        = link_to 'next meeting', url(:enter_payments, :action => 'by_center', :for_date => @center.next_meeting_date_from(@date), :center_id => @center.id) + '#weeksheet'
    %tr
      %td center manager
      %td
        = link_to @center.manager.name, resource(@center.manager)
      %td
        %form{ :action => resource(@branch, @center), :method => 'GET', :style => 'margin: 0px; padding: 0px;'  }
          = date_select 'date', @date
          = submit 'Go!',  :style => 'margin: 0px; padding: 0px;'
  %h1 Approvals
  - @loans_to_approve = @center.clients.loans(:approved_on => nil)
  - if @loans_to_approve.size > 0
    = form_for(@loan, :action => url(:enter_loans, :action => 'approve')) do
      = partial :approvals
      = submit 'Approve these loans'
  - else
    No approvals today

  %h1 Disbursal
  - @loans_to_disburse = @center.clients.loans(:scheduled_disbursal_date.lte => @date, :disbursal_date => nil, :approved_on.not => nil)
  - if @loans_to_disburse.size > 0
    = form_for(@loan, :action => url(:enter_loans, :action => 'disburse')) do
      = partial :disbursals
      = submit 'Disburse these loans'
  - else
    No disbursals today

  %h1 Fees
  - @fee_paying_loans = @center.clients.loans.select{|l| l.fees_paid? == false}
  - @fee_paying_clients = @center.clients.select{|c| c.fees_paid? == false}
  - @fee_paying_things = @fee_paying_clients + @fee_paying_loans
  - unless (@fee_paying_things).blank?
    = form_for(@payment, :action => url(:enter_payments, :action => 'by_center')) do
      = hidden_field :name => :for_date, :value => @date
      Fees collected by
      = select :name => "payment[received_by]", :collection => [["","---"]] + StaffMember.all.map{|sm| [sm.id.to_s,sm.name]}, :selected => @center.manager.id.to_s


      %table.narrow.form{:style => "width:100%"}
        %thead
          %tr{:style => "font-size: 0.85em"}
            %th
              id
            %th
              Client
            %th
              Loan
            %th
              Total Fees Payable
            %th
              Fees Already Paid
            %th
              Fees Due
            %th
              Fees Paid Today
      
        - @fee_paying_things.each do |fpt|
          %tr
            %td
              = fpt.id
            %td
              = Loan.descendants.include?(fpt.class) ? fpt.client.name : fpt.name
            %td
              = fpt.description if fpt.respond_to?("description")
            %td
              - fpt.fee_schedule.each do |date, fs|
                - fs.each do |k,v|
                  = k
                  == :
                  = v
            %td
              = fpt.fees_paid
            %td
              - fp = fpt.fees_payable_on(@date)
              = fp
            %td
              - klass = Loan.descendants.include?(fpt.class) ? Loan : fpt.class
              = text_field :name => "paid[#{klass.to_s.snake_case}][#{fpt.id}]", :value => fpt.total_fees_payable_on(@date), :cols => "5", :style => "width:50px;" 
      = submit 'Pay Fees'
  - else
    No fees due today
    
  %h1 Payments
  = form_for(@payment, :action => url(:enter_payments, :action => 'by_center')) do
    = hidden_field :name => 'for_date', :value => @date
    = hidden_field :name => 'center_id', :value => @center.id
    = partial :cds
    = submit 'Make Payments'

- else
  Choose a center to record a payment for
  = form_for(@payment, :action => url(:enter_payments, :action => 'by_center'), :method => :get) do
    %table
      %tr
        %th
          Centers paying today
        %td
          = select :name => 'center_id', :collection => [["","---"]] + Center.paying_today(@date).map {|c| [c.id.to_s,c.name]}
      %tr
        %th
          or any other center
        %td
          = text_field :name => 'center_text'
      %tr
        %th
          For Date
        %td
          = text_field :name => 'for_date', :value => @date || Date.today
    = submit 'Submit'
