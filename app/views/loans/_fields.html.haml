= hidden_field :name => "loan_type", :value => @loan.class.to_s
= hidden_field :name => "loan_product_id", :value => @loan_product.id
%h3
  ="This loan will be dispensed by loan product: #{@loan_product.name}"
%table.form
  %tr
    %td
      Amount:
    %td
      - if @loan_product.min_amount!=@loan_product.max_amount 
        = text_field :amount, :size => 15
        %span.greytext in Rupees
        = " (#{@loan_product.min_amount} - #{@loan_product.max_amount}) in multiples of Rs. #{@loan_product.amount_multiple}"
      - else
        = @loan_product.min_amount
        %span.greytext Rupees
        = hidden_field :amount, :value => @loan_product.min_amount
  %tr
    %td
      Interest rate:
    %td
      - if @loan_product.min_interest_rate != @loan_product.max_interest_rate 
        = text_field :interest_rate, :size => 15
        %span.greytext in Rupees
        = " (#{@loan_product.min_interest_rate} % - #{@loan_product.max_interest_rate} %)"
      - else
        = @loan_product.min_interest_rate
        %span.greytext %
        = hidden_field :interest_rate, :value => @loan_product.min_interest_rate
      %br/
      %span.greytext the interest rate as a percentage
  %tr
    %td
      Installment frequency:
    %td
      - if INSTALLMENT_FREQUENCIES.include?(@loan_product.installment_frequency)
        = hidden_field :installment_frequency, :value => @loan_product.installment_frequency.to_s
        = @loan_product.installment_frequency.to_s
      - else
        = select :installment_frequency, :collection =>  Loan.installment_frequencies.map { |x| [x.to_s, x.to_s] }
  %tr
    %td
      Number of installments:
    %td
      - if @loan_product.min_number_of_installments==@loan_product.max_number_of_installments
        = @loan_product.min_number_of_installments
        = hidden_field :number_of_installments, :value => @loan_product.min_number_of_installments
      - else
        = text_field :number_of_installments, :size => 4
        = " (#{@loan_product.min_number_of_installments} - #{@loan_product.max_number_of_installments})"
  %tr
    %td
      Loan Purpose:
    %td
      = select :loan_purpose, :collection => LoanPurpose.all.map{|lp| [lp.id.to_s, lp.value]}, :prompt => "----", :selected = @loan.loan_purpose ? @loan.loan_purpose.id : nil
  %tr
    %td
      Funding Line
    %td
      = select_funding_line_for @loan, :funding_line
  %tr
    %td
      Application:
    %td
      on&nbsp;&nbsp;
      = date_select_for @loan, :applied_on
      &nbsp;&nbsp;by&nbsp;&nbsp;
      = select_staff_member_for @loan, :applied_by
  %tr
    %td
      Scheduled disbursal date:
    %td
      on&nbsp;&nbsp;
      = date_select_for @loan, :scheduled_disbursal_date
  %tr
    %td
      Scheduled first payment:
    %td
      on&nbsp;&nbsp;
      = date_select_for @loan, :scheduled_first_payment_date
  - if session.user.can_approve?(@loan)
    %tr
      %td
        Approved:
      %td
        on&nbsp;&nbsp;
        = date_select_for @loan, :approved_on, :nullable => true
        &nbsp;&nbsp;by&nbsp;&nbsp;
        = select_staff_member_for @loan, :approved_by
        %br/
        %span.greytext these fields are optional so may be specified later
    %tr
      %td
        Disbursed:
      %td
        on&nbsp;&nbsp;
        = date_select_for @loan, :disbursal_date, :nullable => true
        &nbsp;&nbsp;by&nbsp;&nbsp;
        = select_staff_member_for @loan, :disbursed_by
        %br/
        %span.greytext these fields are optional so may be specified later
  %tr
    %td
    %td
      = submit submit_text
      &nbsp;&nbsp;
      = link_to 'cancel', cancel_link
